;
; This file was automatically generated from m4/ltrace.conf.m4, do not edit!
;



;
; This is (almost) a complete listing of libTw
; function prototypes to use with Linux ltrace(1).
;
; You can either append the contents of this file to the system-wide
; /etc/ltrace.conf or to your personal ~/.ltrace.conf
;
;
; ltrace.conf
;
; Argument types:
; +		== May vary (ie, is a returned value) (prefix)
; void
; int
; uint		== (unsigned int)
; octal		== (unsigned)			[written in octal]
; char
; addr		== (void *)			[unsigned, written in hexa]
; file		== (FILE *)						[TODO]
; format	== ((const char *), ...)	[printf() like]		[TODO]
; string	== (char *)
; stringN	== (char *)		[N>=0]	[show only up to (arg N) bytes]

; libTw.h
;
; the following are added manually
;
addr  Tw_CreateWidget(addr, int, int, uint, uint, int, int, int);
void  Tw_MapWidget(addr, addr, addr);
void  Tw_UnMapWidget(addr, addr);
void  Tw_DeleteObj(addr, addr);
addr  Tw_CreateGadget(addr, addr, int, int, string, uint, uint, int, int, int, int, int, int, int);
addr  Tw_SearchWidgetAtWidget(addr, addr, int, int);
void  Tw_Create4MenuRow(addr, addr, int, int, int, string);
addr  Tw_CreateWindow(addr, int, string2, string2, addr, int, uint, uint, uint, int, int, int);
addr  Tw_Create4MenuWindow(addr, addr);
void  Tw_WriteAsciiWindow(addr, addr, uint, string3);
void  Tw_WriteHWAttrWindow(addr, addr, int, int, uint, string);
void  Tw_WriteRowWindow(addr, addr, uint, string3);
void  Tw_ConfigureWindow(addr, addr, octal, int, int, int, int, int, int);
void  Tw_SetColorsWindow(addr, addr, octal, int, int, int, int, int, int, int, int, int);
void  Tw_GotoXYWindow(addr, addr, uint, uint);
addr  Tw_Create4MenuMenuItem(addr, addr, addr, int, int, string);
addr  Tw_Create4MenuCommonMenuItem(addr, addr);
addr  Tw_CreateMenu(addr, addr, int, int, int, int, int, int, int);
void  Tw_SetInfoMenu(addr, addr, int, uint, string, string);
addr  Tw_CreateMsgPort(addr, int, string2, int, int, int);
addr  Tw_FindMsgPort(addr, addr, int, string);
addr  Tw_GetOwnerSelection(addr);
void  Tw_SetOwnerSelection(addr, addr, int, int);
void  Tw_RequestSelection(addr, addr, addr);
void  Tw_NotifySelection(addr, addr, addr, addr, string, int, string);
addr  Tw_FirstScreen(addr);
addr  Tw_Open(string);
void  Tw_Close(addr);
int   Tw_Errno(addr);
addr  Tw_ErrnoLocation(addr);
string Tw_StrError(addr, int);
string Tw_StrErrorDetail(addr, int, int);
int   Tw_ConnectionFd(addr);
int   Tw_Flush(addr);
int   Tw_Sync(addr);
int   Tw_InPanic(addr);
addr  Tw_PendingMsg(addr);
addr  Tw_PeekMsg(addr);
addr  Tw_ReadMsg(addr, int);
addr  Tw_CloneReadMsg(addr, int);
addr  Tw_CreateMsg(addr, int, int);
int   Tw_SendMsg(addr, addr, addr);
void  Tw_BlindSendMsg(addr, addr, addr);
addr  Tw_Stat(addr, addr, addr, int);
addr  TwStat(addr, addr, int);

;
; the following are autogenerated
;















uint Tw_FindFunction(addr, uint, string, uint, string);


uint Tw_SyncSocket(addr);


uint Tw_ServerSizeof(addr, uint);


uint Tw_CanCompress(addr);

uint Tw_DoCompress(addr, uint);


void Tw_NeedResizeDisplay(addr);


void Tw_AttachHW(addr, uint, string, uint);

uint Tw_DetachHW(addr, uint, string);


void Tw_SetFontTranslation(addr, string);

void Tw_SetHWFontTranslation(addr, addr);




void Tw_ChangeFieldObj(addr, addr, uint, uint, uint);




void Tw_RecursiveDeleteWidget(addr, addr);


void Tw_SetXYWidget(addr, addr, int, int);
void Tw_ResizeWidget(addr, addr, int, int);
void Tw_ScrollWidget(addr, addr, int, int);
void Tw_DrawWidget(addr, addr, int, int, int, int, string, addr, addr);

void Tw_SetVisibleWidget(addr, addr, uint);

void Tw_FocusSubWidget(addr, addr);
addr Tw_FindWidgetAtWidget(addr, addr, int, int);

void Tw_RaiseWidget(addr, addr);
void Tw_LowerWidget(addr, addr);
void Tw_RestackChildrenWidget(addr, addr, uint, addr);
void Tw_CirculateChildrenWidget(addr, addr, uint);




addr Tw_CreateButtonGadget(addr, addr, int, int, string, uint, uint, addr, addr, addr, int, int);

void Tw_WriteTextsGadget(addr, addr, uint, int, int, string, int, int);
void Tw_WriteHWFontsGadget(addr, addr, uint, int, int, addr, int, int);





void Tw_WriteStringWindow(addr, addr, int, string);
void Tw_WriteHWFontWindow(addr, addr, int, addr);



void Tw_SetTitleWindow(addr, addr, int, string);
void Tw_SetColTextWindow(addr, addr, addr);


addr Tw_FindRowByCodeWindow(addr, addr, int);

addr Tw_CreateGroup(addr);
void Tw_InsertGadgetGroup(addr, addr, addr);
void Tw_RemoveGadgetGroup(addr, addr, addr);

addr Tw_GetSelectedGadgetGroup(addr, addr);
void Tw_SetSelectedGadgetGroup(addr, addr, addr);

void Tw_RaiseRow(addr, addr);
void Tw_LowerRow(addr, addr);
void Tw_RestackChildrenRow(addr, addr, uint, addr); 
void Tw_CirculateChildrenRow(addr, addr, uint);

addr Tw_Create4MenuAny(addr, addr, addr, uint, uint, int, string);









void Tw_BgImageScreen(addr, addr, int, int, addr);

addr Tw_PrevObj(addr, addr);
addr Tw_NextObj(addr, addr);
addr Tw_ParentObj(addr, addr);


addr Tw_FirstWidget(addr, addr);
addr Tw_FirstMsgPort(addr);
addr Tw_FirstMenu(addr, addr);
addr Tw_FirstW(addr, addr);
addr Tw_FirstGroup(addr, addr);
addr Tw_FirstMutex(addr, addr);
addr Tw_FirstMenuItem(addr, addr);
addr Tw_FirstGadget(addr, addr);

int Tw_GetDisplayWidth(addr);
int Tw_GetDisplayHeight(addr);
addr Tw_GetAll(addr);

uint Tw_SendToMsgPort(addr, addr, uint, string);
void Tw_BlindSendToMsgPort(addr, addr, uint, string);






uint Tw_SetServerUid(addr, uint, uint);






;
; This is (almost) a complete listing of libTT
; function prototypes to use with Linux ltrace(1).
;
; You can either append the contents of this file to the system-wide
; /etc/ltrace.conf or to your personal ~/.ltrace.conf
;
;
; ltrace.conf
;
; Argument types:
; +		== May vary (ie, is a returned value) (prefix)
; void
; int
; uint		== (unsigned int)
; octal		== (unsigned)			[written in octal]
; char
; addr		== (void *)			[unsigned, written in hexa]
; file		== (FILE *)						[TODO]
; format	== ((const char *), ...)	[printf() like]		[TODO]
; string	== (char *)
; stringN	== (char *)		[N>=0]	[show only up to (arg N) bytes]

; libTT
;
; the following are added manually
;
int     TTCheckMagic(string);
addr    TTCloneMem(addr, uint);
string  TTCloneStr(string);
void    TTConfigMalloc(addr, addr, addr);
uint    TTInPanic(void);
uint    TTLibraryVersion(void);

uint    TTOpen(string);
void    TTClose(void);
void    TTCloseQuickNDirty(void);

int     TTConnectionFd(void);
uint    TTFlush(void);
uint    TTTimidFlush(void);
uint    TTSync(void);

uint    TTMainLoop(void);
uint    TTMainLoopOnce(uint);
void    TTExitMainLoop(void);
addr    TTErrnoLocation(void);
string  TTStrError(uint);
string  TTStrErrorDetail(uint, uint);

addr    TTNew(addr);
void    TTDel(addr);
uint    TTInstanceOf(addr, addr);
addr    TTClassOf(addr);
string  TTClassNameOf(addr);
uint    TTGetFieldId(string);
string  TTGetFieldName(uint);

addr    TTCreateL_ttlistener(addr, addr, uint, uint, uint, uint, addr);

;
; the following are autogenerated
;


































                                
void TTRef_ttobj(addr);
void TTUnref_ttobj(addr);  
addr TTCreate_ttevent(uint, uint, uint);
void TTFire_ttevent(addr, addr); 

addr TTCreate8_tteventbig(uint, uint, uint, int, int, int, int, addr, addr, uint, string);
addr TTCreate4_tteventbig(uint, uint, uint, int, int, int, int);
addr TTCreate4s4_tteventbig(uint, uint, uint, addr, addr, uint, string); 
addr TTClone_ttbitmask(addr);
addr TTCreate_ttbitmask(addr);
addr TTCreateA_ttbitmask(addr, addr);
void TTClear_ttbitmask(addr);
void TTFill_ttbitmask(addr);
void TTNegate_ttbitmask(addr);
void TTChange_ttbitmask(addr, uint);
uint TTIsMember_ttbitmask(addr, addr);
uint TTAdd_ttbitmask(addr, addr);
uint TTAddA_ttbitmask(addr, addr, addr);
uint TTRemove_ttbitmask(addr, addr);
uint TTRemoveA_ttbitmask(addr, addr, addr);
uint TTCombine_ttbitmask(addr, addr, uint);
uint TTCombineA_ttbitmask(addr, addr, addr, uint);
uint TTCombineB_ttbitmask(addr, addr, uint); 
addr TTCreate_tteventmask(addr, addr, addr);
void TTSetEvtypeMask_tteventmask(addr, addr);
void TTSetEvcodeMask_tteventmask(addr, addr);
void TTSetComponentMask_tteventmask(addr, addr);
void TTSetTruthTable_tteventmask(addr, uint);      
addr TTCreate_ttlistener(addr, uint, uint, addr, addr);
addr TTCreateA_ttlistener(addr, addr, uint, uint, uint, uint, addr, addr);
addr TTCreateV_ttlistener(addr, addr, uint, uint, uint, uint, addr, addr);

addr TTCreateDel_ttlistener(addr, uint, addr);
addr TTCreateAskclose_ttlistener(addr, uint, addr);
addr TTCreateKey_ttlistener(addr, uint, uint, uint, addr);
addr TTCreateMouse_ttlistener(addr, uint, uint, uint, addr);
addr TTCreateActivate_ttlistener(addr, uint, addr);
addr TTCreateChange_ttlistener(addr, uint, uint, addr);
addr TTCreateKeyData_ttlistener(addr, string, uint, addr);
addr TTCreateExpose_ttlistener(addr, uint, addr);
    
void TTAddTo_ttlistener(addr, addr);    
void TTRemove_ttlistener(addr);
uint TTSetArgs_ttlistener(addr, uint, uint, addr);
void TTSetEventMask_ttlistener(addr, addr); 
addr TTCreateA_tttimer(addr, uint, uint, uint, uint, addr, addr, uint, uint);
addr TTCreate_tttimer(addr, uint, addr, addr, uint, uint);
void TTSetDelay_tttimer(addr, uint, uint);    
void TTSetEnabled_tttimer(addr, uint);    
uint TTIsEnabled_tttimer(addr); 
void TTAddListener_ttcomponent(addr, addr);
void TTRemoveListener_ttcomponent(addr, addr);
addr TTSetKeyData_ttcomponent(addr, string, addr);
addr TTGetKeyData_ttcomponent(addr, string);
void TTUnsetKeyData_ttcomponent(addr, string);
addr TTGetData_ttcomponent(addr, string);              
void TTAddTo_ttvisible(addr, addr);    
void TTRemove_ttvisible(addr);    
void TTInvalidate_ttvisible(addr);    
void TTSetVisible_ttvisible(addr, uint);    
void TTSetTheme_ttvisible(addr, addr);    
void TTDraw_ttvisible(addr, int, int, int, int, int, string, addr, addr);    
void TTBuiltinRepaint_ttvisible(addr, int, int, int, int);
void TTSetRepaint_ttvisible(addr, addr);
void TTAdd_ttvisible(addr, addr);
void TTExpose_ttvisible(addr, int, int, int, int);     
addr TTGetRoot_ttnative(void);    
int TTGetW_ttnative(addr);    
int TTGetH_ttnative(addr);
addr TTCreate_ttnative(addr);     
void TTSetXY_ttwidget(addr, int, int);    
void TTSetWH_ttwidget(addr, int, int);    
void TTSetXl_ttwidget(addr, int);    
void TTSetYl_ttwidget(addr, int);    
void TTSetWl_ttwidget(addr, int);    
void TTSetHl_ttwidget(addr, int);    
void TTSetTooltip_ttwidget(addr, addr);
void TTSetXlYl_ttwidget(addr, uint, int, int);
void TTSetWlHl_ttwidget(addr, uint, int, int);
void TTSetXYWH_ttwidget(addr, uint, int, int, int, int);
void TTSetX_ttwidget(addr, int);
void TTSetY_ttwidget(addr, int);
void TTSetW_ttwidget(addr, int);
void TTSetH_ttwidget(addr, int);     
uint TTDoSetFont_ttlabel(addr, addr, addr);
uint TTSetFont_ttlabel(addr, addr);
uint TTSetText_ttlabel(addr, string);
addr TTCreate_ttlabel(string);     
void TTSetWidget_tttooltip(addr, addr);     
void TTAdd_ttbuttongroup(addr, addr);    
void TTRemove_ttbuttongroup(addr, addr);    
void TTSetChecked_ttbuttongroup(addr, addr);         
uint TTDoSetAttr_ttanybutton(addr, addr, int, int, int);
uint TTSetAttr_ttanybutton(addr, addr, int, int, int);
uint TTSetFont_ttanybutton(addr, addr, int, int, int);
uint TTSetText_ttanybutton(addr, string, int, int, int);
addr TTCreate_ttanybutton(string, int, int, int);     
void TTSetPressed_ttbutton(addr, uint);
uint TTIsPressed_ttbutton(addr);
addr TTCreate_ttbutton(string, int, int, int);     
void TTSetChecked_ttcheckbutton(addr, uint);
uint TTIsChecked_ttcheckbutton(addr);
addr TTCreate_ttcheckbutton(string, int, int, int); 
void TTAddToGroup_ttradiobutton(addr, addr);
void TTRemoveFromGroup_ttradiobutton(addr);
addr TTCreate_ttradiobutton(string, int, int, int);             
void TTSetOrientation_ttanyscroll(addr, uint);    
void TTSetSize_ttanyscroll(addr, int);    
void TTSetRealSize_ttanyscroll(addr, int);    
void TTSetViewSize_ttanyscroll(addr, int);    
void TTSetPosition_ttanyscroll(addr, int); 
addr TTCreate1_ttscrollbar(uint);
addr TTCreate4_ttscrollbar(uint, int, int, int);     
void TTSetSlideMin_ttslider(addr, int);    
void TTSetSlideMax_ttslider(addr, int);    
void TTSetSlideValue_ttslider(addr, int);
addr TTCreate_ttslider(uint, int); 
addr TTCreate_ttprogressbar(uint); 
addr TTCreate_ttscrollpane(int, int);    
void TTSetBarX_ttscrollpane(addr, addr);    
void TTSetBarY_ttscrollpane(addr, addr);     
uint TTSetTitle_ttwindow(addr, string);     
void TTSetMenubar_ttframe(addr, addr);
addr TTCreate_ttframe(string); 
addr TTCreate_ttscroller(int, int);     
addr TTGetDefault_ttmenubar(void);    
addr TTGetDefault_tttheme(void); 
addr TTSet_ttapplication(string);
addr TTGet_ttapplication(void);














            
addr TTGetId_ttobj(addr);    
uint TTGetRefcount_ttobj(addr);    
uint TTGetOflags_ttobj(addr);            
addr TTGetUserData_ttobj(addr);
void TTSetUserData_ttobj(addr, addr);    
addr TTGetEventsInprogress_ttobj(addr);    
addr TTGetEventsInformed_ttobj(addr);  
        
addr TTGetCallback_ttevent(addr);    
addr TTGetComponent_ttevent(addr);    
uint TTGetEvtype_ttevent(addr);    
uint TTGetEvcode_ttevent(addr);    
uint TTGetEvflags_ttevent(addr);            
void TTConsume_ttevent(addr); 
        
int TTGetX_tteventbig(addr);    
int TTGetY_tteventbig(addr);    
int TTGetW_tteventbig(addr);    
int TTGetH_tteventbig(addr);    
addr TTGetValue_tteventbig(addr);    
addr TTGetOldValue_tteventbig(addr);    
uint TTGetLen_tteventbig(addr);    
string TTGetData_tteventbig(addr); 
                     
        
addr TTGetEvtypeMask_tteventmask(addr);    
addr TTGetEvcodeMask_tteventmask(addr);    
addr TTGetComponentMask_tteventmask(addr);    
uint TTGetTruthTable_tteventmask(addr); 
        
uint TTGetLflags_ttcallback(addr);    
addr TTGetComponent_ttcallback(addr);    
addr TTGetPrev_ttcallback(addr);    
addr TTGetNext_ttcallback(addr); 
            
addr TTGetEvent_ttlistener(addr);    
uint TTGetNargComponent_ttlistener(addr);    
uint TTGetNargEvent_ttlistener(addr);    
uint TTGetNargs_ttlistener(addr);    
addr TTGetFunction_ttlistener(addr);    
addr TTGetArgs_ttlistener(addr);    
addr TTGetEventMask_ttlistener(addr);         
                     
        
addr TTGetCallbacks_ttcomponent(addr);    
addr TTGetListeners_ttcomponent(addr);    
addr TTGetTimers_ttcomponent(addr);    
addr TTGetDatas_ttcomponent(addr); 
            
addr TTGetComponent_ttdata(addr);    
string TTGetKey_ttdata(addr);    
addr TTGetKeyLen_ttdata(addr);    
addr TTGetData_ttdata(addr);
void TTSetData_ttdata(addr, addr); 
        
uint TTGetVflags_ttvisible(addr);    
addr TTGetPrev_ttvisible(addr);    
addr TTGetNext_ttvisible(addr);    
addr TTGetParent_ttvisible(addr);    
addr TTGetChildFirst_ttvisible(addr);    
addr TTGetChildLast_ttvisible(addr);    
addr TTGetTheme_ttvisible(addr);    
addr TTGetRepaint_ttvisible(addr); 
     
        
int TTGetX_ttwidget(addr);    
int TTGetY_ttwidget(addr);    
int TTGetW_ttwidget(addr);    
int TTGetH_ttwidget(addr);    
int TTGetXl_ttwidget(addr);    
int TTGetYl_ttwidget(addr);    
int TTGetWl_ttwidget(addr);    
int TTGetHl_ttwidget(addr);        
addr TTGetTooltip_ttwidget(addr); 
        
addr TTGetTextLen_ttlabel(addr);    
addr TTGetText_ttlabel(addr); 
            
addr TTGetWidget_tttooltip(addr);     
        
addr TTGetGroupFirst_ttbuttongroup(addr);    
addr TTGetGroupLast_ttbuttongroup(addr);    
addr TTGetChecked_ttbuttongroup(addr); 
        
addr TTGetText_ttanybutton(addr);    
int TTGetTextWidth_ttanybutton(addr);    
int TTGetTextHeight_ttanybutton(addr);     
     
     
        
addr TTGetGroup_ttradiobutton(addr);    
addr TTGetGroupPrev_ttradiobutton(addr);    
addr TTGetGroupNext_ttradiobutton(addr); 
        
uint TTGetOrientation_ttanyscroll(addr);    
int TTGetSize_ttanyscroll(addr);    
int TTGetRealSize_ttanyscroll(addr);    
int TTGetViewSize_ttanyscroll(addr);        
int TTGetPosition_ttanyscroll(addr);    
int TTGetRealPosition_ttanyscroll(addr);     
         
        
int TTGetSlideMin_ttslider(addr);    
int TTGetSlideMax_ttslider(addr);    
int TTGetSlideValue_ttslider(addr); 
             
        
addr TTGetBarX_ttscrollpane(addr);    
addr TTGetBarY_ttscrollpane(addr); 
        
addr TTGetTitleLen_ttwindow(addr);    
string TTGetTitle_ttwindow(addr); 
        
addr TTGetMenubar_ttframe(addr); 
        
addr TTGetScrollpane_ttscroller(addr); 
        
string TTGetName_ttmenuitem(addr); 
     
     
    
    
addr TTGetMenubar_ttmenu(addr); 
     
        
addr TTGetTextLen_ttanytext(addr);    
addr TTGetText_ttanytext(addr); 
     
     
    
    
string TTGetName_tttheme(addr);                 
        
string TTGetName_ttapplication(addr);







